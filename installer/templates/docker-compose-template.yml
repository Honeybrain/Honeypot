version: '3'
services:
  reverse_proxy:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./honeypot/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - "./honeypot/nginx/config/block.conf:/etc/nginx/block.conf"
      - ./honeypot/logs/nginx:/var/log/nginx
    ports:
      - "80:80"
    networks:
      - services_network
    depends_on:
      - shop
      - fail2ban

  shop:
    image: shop_image
    container_name: shop
    build:
      context: ./honeypot/shop/docker
    networks:
      - services_network

  fail2ban:
    build:
      context: ./honeypot/fail2ban/docker
    container_name: fail2ban
    restart: "unless-stopped"
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./honeypot/logs/suricata/fast.log:/var/log/suricata.log
      - "./honeypot/logs/fail2ban:/var/log/fail2ban"
      - "./honeypot/fail2ban/config:/data"
      - "/var/lib/docker/containers/:/container-logs/:ro"
      - "./honeypot/nginx/config/block.conf:/etc/nginx/block.conf"
      - "./honeypot/nginx/config/nginx.conf:/etc/nginx/nginx.conf"
    env_file:
      - "./honeypot/fail2ban.env"
    depends_on:
      - suricata

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    volumes:
      - ./honeypot/logs/suricata/fast.log:/var/log/suricata/fast.log
      - ./honeypot/suricata/config/suricata.yaml:/etc/suricata/suricata.yaml
      - ./honeypot/suricata/config/suricata.rules:/var/lib/suricata/rules/suricata.rules
    command: -i eth0
{% include 'dummy_pc_template.yml' %}
{% include 'ftp_server_template.yml' %}

  backend:
    image: dashboard_back
    build:
      context: ../../../Backend/
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
    networks:
      - dashboard_network
    volumes:
      - "./honeypot/logs/suricata/fast.log:/app/honeypot/fast.log"
      - "./honeypot/nginx/config/block.conf:/app/honeypot/block.conf"
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: frontend
    build:
      context: ../../../Frontend/
    ports:
      - "3000:3000"
    networks:
      - dashboard_network

networks:
  honeypot_network:
    ipam:
      config:
        - subnet: {{ subnet }}
  services_network:
  dashboard_network: