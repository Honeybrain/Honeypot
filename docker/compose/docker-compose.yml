version: "3"
services:
  reverse_proxy:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - "../../config/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "../../config/nginx/block.conf:/etc/nginx/block.conf"
      - "../../logs/nginx:/var/log/nginx"
    ports:
      - "80:80"
    networks:
      - services_network
    depends_on:
      - shop

  shop:
    image: shop_image
    container_name: shop
    build:
      context: ../dockerfile/shop
    networks:
      - services_network

  dummy_pc_0:
    container_name: honeypot_dummy_pc_0
    build:
      context: ../modules/dummy_pc
      dockerfile: Dockerfile
    networks:
      honeypot_network:
        ipv4_address: 192.168.1.12

  dummy_pc_1:
    container_name: honeypot_dummy_pc_1
    build:
      context: ../modules/dummy_pc
      dockerfile: Dockerfile
    networks:
      honeypot_network:
        ipv4_address: 192.168.1.13

  dummy_pc_2:
    container_name: honeypot_dummy_pc_2
    build:
      context: ../modules/dummy_pc
      dockerfile: Dockerfile
    networks:
      honeypot_network:
        ipv4_address: 192.168.1.14

  dummy_pc_3:
    container_name: honeypot_dummy_pc_3
    build:
      context: ../modules/dummy_pc
      dockerfile: Dockerfile
    networks:
      honeypot_network:
        ipv4_address: 192.168.1.15

  ftp:
    container_name: honeypot_dummy_ftp
    build:
      context: ../modules/ftp
      dockerfile: Dockerfile
    ports:
      - "21:21"
    networks:
      honeypot_network:
        ipv4_address: 192.168.1.17

  backend:
    image: backend
    container_name: backend
    build:
      context: ../../../Backend/
      dockerfile: Dockerfile.dev
    environment:
      - GRPC_URL=backend:50051
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_FROM=no.reply.honeybrain@gmail.com
      - SMTP_USER=no.reply.honeybrain@gmail.com
      - SMTP_PASSWORD=hSC55anx7R85Gt
    networks:
      - dashboard_network
    volumes:
      - "../../logs/suricata/fast.log:/app/honeypot/fast.log"
      - "../../config/nginx/block.conf:/app/honeypot/block.conf"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "50051"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - mongo

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - dashboard_network

  envoy:
    container_name: envoy
    build:
      context: ../../../Backend/
      dockerfile: Dockerfile.envoy
    ports:
      - "8080:8080"
    networks:
      - dashboard_network
    depends_on:
      - backend

  frontend:
    image: frontend
    container_name: frontend
    build:
      context: ../../../Frontend/
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - dashboard_network
    volumes:
      - "../../../Frontend/src:/app/src"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  honeypot_network:
    name: honeypot_network
    ipam:
      config:
        - subnet: 192.168.1.0/24
  services_network:
    name: services_network
  dashboard_network:
    name: dashboard_network
