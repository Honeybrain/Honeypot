syntax = "proto3";

package user;

// The SignInSignUpRequest message is used for the SignIn and SignUp operations.
message SignInSignUpRequest {
  string email = 1;
  string password = 2;
}

message UserResponse {
  string message = 1;
  string token = 2;
}

message EmptyRequest {}

message EmptyResponse {
  string message = 1;
}

message PasswordRequest {
  string password = 1;
}

message EmailRequest {
  string email = 1;
}

enum RoleEnum {
  ADMIN = 0;
  CAN_INVITE = 1;
  CAN_MANAGE_IP = 2;
  CAN_READ_IP = 3;
  CAN_READ_LOGS = 4;
  CAN_MANAGE_CONFIGURATION = 5;
  CAN_READ_SERVICES = 6;
}

message InviteUserRequest {
  string email = 1;
  repeated RoleEnum roles = 2;
}

message ChangeRightsRequest {
  string email = 1;
  repeated RoleEnum roles = 2;
}

message UserDto {
  string id = 1;
  string email = 2;
  repeated RoleEnum roles = 3;
  bool activated = 4;
  string language = 5;
}

message GetUsersResponse {
  repeated UserDto users = 1;
}

message ActivateUserRequest {
  string token = 1;
  string password = 2;
}

message ActivateUserResponse {
  string token = 1;
}

message ChangeLanguageRequest {
  string language = 1;
}

// The UserService defines the methods that our service exposes
service User {
  rpc SignIn(SignInSignUpRequest) returns (UserResponse);
  rpc SignUp(SignInSignUpRequest) returns (UserResponse);
  rpc ResetPassword(PasswordRequest) returns (EmptyResponse);
  rpc ChangeEmail(EmailRequest) returns (EmptyResponse);
  rpc InviteUser(InviteUserRequest) returns (UserDto);
  rpc ActivateUser(ActivateUserRequest) returns (ActivateUserResponse);
  rpc ChangeRights(ChangeRightsRequest) returns (UserDto);
  rpc GetUsers(EmptyRequest) returns (GetUsersResponse);
  rpc DeleteUser(EmailRequest) returns (EmptyResponse);
  rpc ChangeLanguage(ChangeLanguageRequest) returns (EmptyResponse);
}
